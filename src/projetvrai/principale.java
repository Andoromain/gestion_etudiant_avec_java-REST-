/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetvrai;

import com.google.gson.Gson;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.table.DefaultTableModel;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.UIManager;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpDelete;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpPut;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.codehaus.jackson.map.ObjectMapper;

import projetvrai.Etudiant;
import static sun.plugin2.util.PojoUtil.toJson;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.ListItem;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileNotFoundException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import jdk.nashorn.internal.runtime.regexp.RegExp;
import jdk.nashorn.internal.runtime.regexp.joni.Regex;

/**
 *
 * @author Andr√¥ Ajpr Romain
 */
public class principale extends javax.swing.JFrame {

    private DecimalFormat df=new DecimalFormat("0.##");
    /**
     * Creates new form principale
     */
    public principale() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        conteneurEtudiant = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableauEtudiant = new javax.swing.JTable();
        rechercheEtText = new javax.swing.JTextField();
        rechercheEtButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        numEtText = new javax.swing.JTextField();
        nomText = new javax.swing.JTextField();
        ajouterEtButton = new javax.swing.JButton();
        modifierEtButton = new javax.swing.JButton();
        supprimerEtButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        bulletinButton = new javax.swing.JButton();
        niveauCombobox = new javax.swing.JComboBox<>();
        numEtEdit = new javax.swing.JTextField();
        rafraichirEtudiant = new javax.swing.JButton();
        conteneurMatiere = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableauMatiere = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        codematText = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        libelleText = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        codematEdit = new javax.swing.JTextField();
        ajouterMatButton = new javax.swing.JButton();
        modifierMatButton = new javax.swing.JButton();
        supprimerMatButton = new javax.swing.JButton();
        rafraichirMatiere = new javax.swing.JButton();
        coefText = new javax.swing.JTextField();
        conteneurNote = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableauNote = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        conteurEdit = new javax.swing.JTextField();
        ajouterNoteButton = new javax.swing.JButton();
        modifierNoteButton = new javax.swing.JButton();
        supprimerNoteButton = new javax.swing.JButton();
        rafraichirNote = new javax.swing.JButton();
        noteText = new javax.swing.JTextField();
        numEtNote = new javax.swing.JComboBox<>();
        codematNote = new javax.swing.JComboBox<>();
        conteneurClassement = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableauClassement = new javax.swing.JTable();
        rafraichirClassement = new javax.swing.JButton();
        genPDFClassement = new javax.swing.JButton();
        niveauClassement = new javax.swing.JComboBox<>();
        jLabel37 = new javax.swing.JLabel();
        voirClassement = new javax.swing.JButton();
        conteneurAide = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        conteneurApropos = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        conteneurHome = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        conteneurBulletin = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableauBulletin = new javax.swing.JTable();
        jLabel33 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        moyenneBulletin = new javax.swing.JTextField();
        observationBulletin = new javax.swing.JTextField();
        numEtBulletin = new javax.swing.JTextField();
        nomBulletin = new javax.swing.JTextField();
        niveauBulletin = new javax.swing.JTextField();
        genPDFBulletin = new javax.swing.JButton();
        conteneurPrincipale = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        etudiant = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        matiere = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        note = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        classement = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        apropos = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        acceuil = new javax.swing.JButton();
        aide = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        conteneurEtudiant.setMaximumSize(new java.awt.Dimension(710, 570));
        conteneurEtudiant.setMinimumSize(new java.awt.Dimension(710, 570));
        conteneurEtudiant.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableauEtudiant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Numero de l'etudiant", "Nom", "Niveau"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableauEtudiant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableauEtudiantMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableauEtudiant);

        conteneurEtudiant.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 540, 233));

        rechercheEtText.setToolTipText("");
        conteneurEtudiant.add(rechercheEtText, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, 160, -1));

        rechercheEtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/reach.png"))); // NOI18N
        rechercheEtButton.setText("Rechercher");
        rechercheEtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheEtButtonActionPerformed(evt);
            }
        });
        conteneurEtudiant.add(rechercheEtButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 233, -1, 40));

        jLabel8.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 255));
        jLabel8.setText("Etudiant");
        conteneurEtudiant.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 0, -1, -1));

        jLabel9.setText("Num√©ro           :");
        conteneurEtudiant.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, -1, -1));

        jLabel10.setText("Nom                :");
        conteneurEtudiant.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, -1, -1));

        jLabel11.setText("Niveau            :");
        conteneurEtudiant.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, -1, -1));
        conteneurEtudiant.add(numEtText, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 160, -1));

        nomText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomTextActionPerformed(evt);
            }
        });
        conteneurEtudiant.add(nomText, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, 160, 20));

        ajouterEtButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ajouterEtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/aj1.png"))); // NOI18N
        ajouterEtButton.setText("Ajouter");
        ajouterEtButton.setPreferredSize(new java.awt.Dimension(71, 23));
        ajouterEtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterEtButtonActionPerformed(evt);
            }
        });
        conteneurEtudiant.add(ajouterEtButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 120, 50));

        modifierEtButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        modifierEtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/modif1.png"))); // NOI18N
        modifierEtButton.setText("Modifier");
        modifierEtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierEtButtonActionPerformed(evt);
            }
        });
        conteneurEtudiant.add(modifierEtButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 140, 50));

        supprimerEtButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        supprimerEtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/suppr1.png"))); // NOI18N
        supprimerEtButton.setText("Supprimer");
        supprimerEtButton.setPreferredSize(new java.awt.Dimension(71, 23));
        supprimerEtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerEtButtonActionPerformed(evt);
            }
        });
        conteneurEtudiant.add(supprimerEtButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 170, 150, 50));

        bulletinButton.setText("Bulletin  de note");
        bulletinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bulletinButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(bulletinButton, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bulletinButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        conteneurEtudiant.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 520, 490, 30));

        niveauCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "L1", "L2", "L3", "M1", "M2" }));
        niveauCombobox.setPreferredSize(new java.awt.Dimension(6, 20));
        niveauCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                niveauComboboxActionPerformed(evt);
            }
        });
        conteneurEtudiant.add(niveauCombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 160, -1));

        numEtEdit.setVisible(false);
        conteneurEtudiant.add(numEtEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, 50, -1));

        rafraichirEtudiant.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/rafr.png"))); // NOI18N
        rafraichirEtudiant.setText("Rafraichir");
        rafraichirEtudiant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rafraichirEtudiantActionPerformed(evt);
            }
        });
        conteneurEtudiant.add(rafraichirEtudiant, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 230, 110, 40));

        conteneurMatiere.setMaximumSize(new java.awt.Dimension(710, 570));
        conteneurMatiere.setMinimumSize(new java.awt.Dimension(710, 570));
        conteneurMatiere.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableauMatiere.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code Matiere", "Libelle", "Coefficient"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableauMatiere.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableauMatiereMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableauMatiere);

        conteneurMatiere.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 515, 249));

        jLabel18.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 102, 255));
        jLabel18.setText("Mati√®re");
        conteneurMatiere.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, -1, -1));

        jLabel19.setText("Code mati√®re         :");
        conteneurMatiere.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, -1, -1));
        conteneurMatiere.add(codematText, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 160, -1));

        jLabel22.setText("Libell√©                   :");
        conteneurMatiere.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, -1, -1));

        libelleText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libelleTextActionPerformed(evt);
            }
        });
        conteneurMatiere.add(libelleText, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, 160, 20));

        jLabel23.setText("Coefficient            :");
        conteneurMatiere.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 130, -1, -1));

        codematEdit.setVisible(false);
        conteneurMatiere.add(codematEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, 50, -1));

        ajouterMatButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ajouterMatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/aj1.png"))); // NOI18N
        ajouterMatButton.setText("Ajouter");
        ajouterMatButton.setPreferredSize(new java.awt.Dimension(71, 23));
        ajouterMatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterMatButtonActionPerformed(evt);
            }
        });
        conteneurMatiere.add(ajouterMatButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 120, 50));

        modifierMatButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        modifierMatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/modif1.png"))); // NOI18N
        modifierMatButton.setText("Modifier");
        modifierMatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierMatButtonActionPerformed(evt);
            }
        });
        conteneurMatiere.add(modifierMatButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 140, 50));

        supprimerMatButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        supprimerMatButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/suppr1.png"))); // NOI18N
        supprimerMatButton.setText("Supprimer");
        supprimerMatButton.setPreferredSize(new java.awt.Dimension(71, 23));
        supprimerMatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerMatButtonActionPerformed(evt);
            }
        });
        conteneurMatiere.add(supprimerMatButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 170, 150, 50));

        rafraichirMatiere.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/rafr.png"))); // NOI18N
        rafraichirMatiere.setText("Rafraichir");
        rafraichirMatiere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rafraichirMatiereActionPerformed(evt);
            }
        });
        conteneurMatiere.add(rafraichirMatiere, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 240, 110, 40));
        conteneurMatiere.add(coefText, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 160, -1));

        conteneurNote.setMaximumSize(new java.awt.Dimension(710, 570));
        conteneurNote.setMinimumSize(new java.awt.Dimension(710, 570));
        conteneurNote.setPreferredSize(new java.awt.Dimension(610, 550));
        conteneurNote.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableauNote.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero d'etudiant", "Code de matiere", "Note", "Conteur"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableauNote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableauNoteMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableauNote);

        conteneurNote.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 515, 249));

        jLabel24.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 102, 255));
        jLabel24.setText("Notes");
        conteneurNote.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 0, -1, -1));

        jLabel25.setText("Numero d'etudiant          :");
        conteneurNote.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, -1, -1));

        jLabel26.setText("Code de Matiere             :");
        conteneurNote.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, -1, -1));

        jLabel27.setText("Note                               :");
        conteneurNote.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 130, -1, -1));

        conteurEdit.setVisible(false);
        conteneurNote.add(conteurEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, 50, -1));

        ajouterNoteButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ajouterNoteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/aj1.png"))); // NOI18N
        ajouterNoteButton.setText("Ajouter");
        ajouterNoteButton.setPreferredSize(new java.awt.Dimension(71, 23));
        ajouterNoteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterNoteButtonActionPerformed(evt);
            }
        });
        conteneurNote.add(ajouterNoteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 120, 50));

        modifierNoteButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        modifierNoteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/modif1.png"))); // NOI18N
        modifierNoteButton.setText("Modifier");
        modifierNoteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierNoteButtonActionPerformed(evt);
            }
        });
        conteneurNote.add(modifierNoteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 140, 50));

        supprimerNoteButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        supprimerNoteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/suppr1.png"))); // NOI18N
        supprimerNoteButton.setText("Supprimer");
        supprimerNoteButton.setPreferredSize(new java.awt.Dimension(71, 23));
        supprimerNoteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerNoteButtonActionPerformed(evt);
            }
        });
        conteneurNote.add(supprimerNoteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 170, 150, 50));

        rafraichirNote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/rafr.png"))); // NOI18N
        rafraichirNote.setText("Rafraichir");
        rafraichirNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rafraichirNoteActionPerformed(evt);
            }
        });
        conteneurNote.add(rafraichirNote, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 240, 110, 40));

        noteText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noteTextActionPerformed(evt);
            }
        });
        conteneurNote.add(noteText, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 160, -1));

        conteneurNote.add(numEtNote, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 160, -1));

        conteneurNote.add(codematNote, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, 160, -1));

        conteneurClassement.setMaximumSize(new java.awt.Dimension(710, 570));
        conteneurClassement.setMinimumSize(new java.awt.Dimension(710, 570));
        conteneurClassement.setPreferredSize(new java.awt.Dimension(610, 550));
        conteneurClassement.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel32.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 102, 255));
        jLabel32.setText("Classement des √©tudiant par ordre de m√©rite");
        conteneurClassement.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, -1, -1));

        tableauClassement.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero de l'etudiant", "Nom", "Moyenne"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tableauClassement);

        conteneurClassement.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 550, 380));

        rafraichirClassement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/rafr.png"))); // NOI18N
        rafraichirClassement.setText("Rafraichir");
        rafraichirClassement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rafraichirClassementActionPerformed(evt);
            }
        });
        conteneurClassement.add(rafraichirClassement, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 500, 110, 40));

        genPDFClassement.setText("Generer un pdf");
        genPDFClassement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genPDFClassementActionPerformed(evt);
            }
        });
        conteneurClassement.add(genPDFClassement, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 500, 110, 40));

        niveauClassement.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "L1", "L2", "L3", "M1", "M2" }));
        conteneurClassement.add(niveauClassement, new org.netbeans.lib.awtextra.AbsoluteConstraints(299, 70, 70, -1));

        jLabel37.setText("Niveau :");
        conteneurClassement.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 70, 20));

        voirClassement.setText("Voir Classement");
        voirClassement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voirClassementActionPerformed(evt);
            }
        });
        conteneurClassement.add(voirClassement, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 70, -1, 20));

        jLabel5.setText("conteneurAide");

        javax.swing.GroupLayout conteneurAideLayout = new javax.swing.GroupLayout(conteneurAide);
        conteneurAide.setLayout(conteneurAideLayout);
        conteneurAideLayout.setHorizontalGroup(
            conteneurAideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, conteneurAideLayout.createSequentialGroup()
                .addContainerGap(256, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(239, 239, 239))
        );
        conteneurAideLayout.setVerticalGroup(
            conteneurAideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conteneurAideLayout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(jLabel5)
                .addContainerGap(258, Short.MAX_VALUE))
        );

        jLabel6.setText("conteneurApropos");

        javax.swing.GroupLayout conteneurAproposLayout = new javax.swing.GroupLayout(conteneurApropos);
        conteneurApropos.setLayout(conteneurAproposLayout);
        conteneurAproposLayout.setHorizontalGroup(
            conteneurAproposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conteneurAproposLayout.createSequentialGroup()
                .addGap(282, 282, 282)
                .addComponent(jLabel6)
                .addContainerGap(289, Short.MAX_VALUE))
        );
        conteneurAproposLayout.setVerticalGroup(
            conteneurAproposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(conteneurAproposLayout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(jLabel6)
                .addContainerGap(246, Short.MAX_VALUE))
        );

        conteneurHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel41.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel41.setText("Presentation de l'Ecole :");
        jLabel41.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        conteneurHome.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 480, 40));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/t√©l√©chargement (3).jpg"))); // NOI18N
        conteneurHome.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 280, 240));

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/t√©l√©chargement (1).jpg"))); // NOI18N
        conteneurHome.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, -1, -1));

        conteneurBulletin.setMaximumSize(new java.awt.Dimension(710, 570));
        conteneurBulletin.setMinimumSize(new java.awt.Dimension(710, 570));
        conteneurBulletin.setPreferredSize(new java.awt.Dimension(710, 570));
        conteneurBulletin.setRequestFocusEnabled(false);
        conteneurBulletin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tableauBulletin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DESIGNATION", "COEF", "NOTE", "NOTE PONDEREE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tableauBulletin);

        conteneurBulletin.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, -1, 230));

        jLabel33.setFont(new java.awt.Font("Monospaced", 1, 24)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 102, 255));
        jLabel33.setText("BULLETIN DES NOTES");
        conteneurBulletin.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, -1, -1));

        jLabel2.setText("No ETUDIANT      :");
        conteneurBulletin.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, -1, 20));

        jLabel3.setText("NOM                    :");
        conteneurBulletin.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, -1, 20));

        jLabel4.setText("NIVEAU       :");
        conteneurBulletin.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 150, -1, 20));

        jLabel34.setText("MOYENNE    :");
        conteneurBulletin.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 440, -1, 20));

        jLabel35.setText("Observation   :");
        conteneurBulletin.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 480, -1, 20));

        moyenneBulletin.setEnabled(false);
        conteneurBulletin.add(moyenneBulletin, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 440, 160, -1));

        observationBulletin.setEnabled(false);
        conteneurBulletin.add(observationBulletin, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 480, 160, -1));

        numEtBulletin.setEnabled(false);
        conteneurBulletin.add(numEtBulletin, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 110, 120, -1));

        nomBulletin.setEnabled(false);
        conteneurBulletin.add(nomBulletin, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 120, -1));

        niveauBulletin.setEnabled(false);
        conteneurBulletin.add(niveauBulletin, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, 100, -1));

        genPDFBulletin.setText("Generer en PDF");
        genPDFBulletin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genPDFBulletinActionPerformed(evt);
            }
        });
        conteneurBulletin.add(genPDFBulletin, new org.netbeans.lib.awtextra.AbsoluteConstraints(213, 530, 300, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(950, 619));
        setResizable(false);
        setSize(new java.awt.Dimension(1044, 670));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout conteneurPrincipaleLayout = new javax.swing.GroupLayout(conteneurPrincipale);
        conteneurPrincipale.setLayout(conteneurPrincipaleLayout);
        conteneurPrincipaleLayout.setHorizontalGroup(
            conteneurPrincipaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 710, Short.MAX_VALUE)
        );
        conteneurPrincipaleLayout.setVerticalGroup(
            conteneurPrincipaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );

        getContentPane().add(conteneurPrincipale, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 53, 710, 570));

        jPanel2.setBackground(new java.awt.Color(108, 127, 144));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        etudiant.setBackground(new java.awt.Color(108, 127, 144));
        etudiant.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        etudiant.setPreferredSize(new java.awt.Dimension(119, 56));
        etudiant.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                etudiantMouseClicked(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/etudiant.png"))); // NOI18N
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel13.setText(" Etudiant");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout etudiantLayout = new javax.swing.GroupLayout(etudiant);
        etudiant.setLayout(etudiantLayout);
        etudiantLayout.setHorizontalGroup(
            etudiantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(etudiantLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        etudiantLayout.setVerticalGroup(
            etudiantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, etudiantLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(etudiantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.add(etudiant, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 240, 60));

        matiere.setBackground(new java.awt.Color(108, 127, 144));
        matiere.setPreferredSize(new java.awt.Dimension(119, 56));
        matiere.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                matiereMouseClicked(evt);
            }
        });

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/matiere.png"))); // NOI18N
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText("Mati√®re");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout matiereLayout = new javax.swing.GroupLayout(matiere);
        matiere.setLayout(matiereLayout);
        matiereLayout.setHorizontalGroup(
            matiereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(matiereLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        matiereLayout.setVerticalGroup(
            matiereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, matiereLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(matiereLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.add(matiere, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 240, 60));

        note.setBackground(new java.awt.Color(108, 127, 144));
        note.setPreferredSize(new java.awt.Dimension(119, 56));
        note.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                noteMouseClicked(evt);
            }
        });

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/note.png"))); // NOI18N
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText("Notes");
        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout noteLayout = new javax.swing.GroupLayout(note);
        note.setLayout(noteLayout);
        noteLayout.setHorizontalGroup(
            noteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(noteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        noteLayout.setVerticalGroup(
            noteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, noteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(noteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.add(note, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 240, 60));

        classement.setBackground(new java.awt.Color(108, 127, 144));
        classement.setPreferredSize(new java.awt.Dimension(119, 56));
        classement.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classementMouseClicked(evt);
            }
        });

        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/c.png"))); // NOI18N
        jLabel30.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel31.setText("Classement ");
        jLabel31.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout classementLayout = new javax.swing.GroupLayout(classement);
        classement.setLayout(classementLayout);
        classementLayout.setHorizontalGroup(
            classementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(classementLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        classementLayout.setVerticalGroup(
            classementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, classementLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(classementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.add(classement, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 240, 60));

        apropos.setBackground(new java.awt.Color(108, 127, 144));
        apropos.setPreferredSize(new java.awt.Dimension(119, 56));
        apropos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aproposMouseClicked(evt);
            }
        });

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/apropos.png"))); // NOI18N
        jLabel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("A propos");
        jLabel21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout aproposLayout = new javax.swing.GroupLayout(apropos);
        apropos.setLayout(aproposLayout);
        aproposLayout.setHorizontalGroup(
            aproposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aproposLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        aproposLayout.setVerticalGroup(
            aproposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aproposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aproposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.add(apropos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 240, 60));

        acceuil.setBackground(new java.awt.Color(255, 255, 255));
        acceuil.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        acceuil.setForeground(new java.awt.Color(0, 102, 102));
        acceuil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/home.png"))); // NOI18N
        acceuil.setText("Bienvenue");
        acceuil.setBorder(null);
        acceuil.setBorderPainted(false);
        acceuil.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        acceuil.setDefaultCapable(false);
        acceuil.setFocusPainted(false);
        acceuil.setFocusable(false);
        acceuil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceuilActionPerformed(evt);
            }
        });
        jPanel2.add(acceuil, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 7, 167, 34));

        aide.setBackground(new java.awt.Color(108, 127, 144));
        aide.setPreferredSize(new java.awt.Dimension(119, 56));
        aide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aideMouseClicked(evt);
            }
        });

        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projetvrai/aide.png"))); // NOI18N
        jLabel28.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel29.setText("Aide");
        jLabel29.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout aideLayout = new javax.swing.GroupLayout(aide);
        aide.setLayout(aideLayout);
        aideLayout.setHorizontalGroup(
            aideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aideLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        aideLayout.setVerticalGroup(
            aideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, aideLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(aideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel2.add(aide, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 240, 60));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 240, 590));

        jPanel1.setBackground(new java.awt.Color(246, 244, 247));
        jPanel1.setToolTipText("");
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(246, 244, 247));
        jButton1.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jButton1.setText("GESTION des NOTES");
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 419, -1));

        jButton2.setBackground(new java.awt.Color(29, 142, 200));
        jButton2.setFont(new java.awt.Font("Stencil", 1, 14)); // NOI18N
        jButton2.setText("ATE");
        jButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton2.setFocusPainted(false);
        jButton2.setFocusable(false);
        jButton2.setOpaque(false);
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 60, 30));

        jLabel1.setFont(new java.awt.Font("Unispace", 1, 14)); // NOI18N
        jLabel1.setText("Corporation");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 8, -1, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 50));

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void collerPage(JPanel a){
        a.setVisible(true);
       conteneurPrincipale.removeAll();
       conteneurPrincipale.setLayout(new CardLayout(0,0));
       conteneurPrincipale.add(a);
       conteneurPrincipale.repaint();
       conteneurPrincipale.revalidate();
    }
    
    private void affichageEtudiant(){
         // TODO add your handling code here:
         
        Etudiant a=new Etudiant();
        Etudiant[] b = null;
        try {
           b=a.listeEtudiants();
        } catch (IOException ex) {
            Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel model=(DefaultTableModel)tableauEtudiant.getModel();
        model.setRowCount(0);
        int i=0;
        while(i<b.length){
            model.insertRow(model.getRowCount(),new Object[]{b[i].getnum(),b[i].getnom(),b[i].getniveau()});
            i++;
        }
    }
    
    private void affichageMatiere(){
        Matiere a=new Matiere();
        Matiere[] b = null;
       
        try {
           b=a.listeMatieres();
        } catch (IOException ex) {
            Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultTableModel model=(DefaultTableModel)tableauMatiere.getModel();
        model.setRowCount(0);
        int i=0;
        while(i<b.length){
            model.insertRow(model.getRowCount(),new Object[]{b[i].getCodeMat(),b[i].getLibelle(),b[i].getCoefficient()});
            i++;
        }
          codematText.setText("");
        codematEdit.setText("");
        libelleText.setText("");
        coefText.setText("");
    }
    public void affichageNote(){
        
        numEtNote.removeAllItems();
        codematNote.removeAllItems();
        //afficher tous numero matiere sur combobox
        Etudiant a=new Etudiant();
        Etudiant[] b = null;
       
        try {
           b=a.listeEtudiants();
        } catch (IOException ex) {
            Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
        }
        int i=0;
        while(i<b.length){
            numEtNote.addItem(b[i].getnum());
            i++;
        }
        
        //afficher tous codemat sur combobox
        Matiere a1=new Matiere();
        Matiere[] b1 = null;
       
        try {
           b1=a1.listeMatieres();
        } catch (IOException ex) {
            Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
        }
        i=0;
        while(i<b1.length){
            codematNote.addItem(b1[i].getCodeMat());
            i++;
        }
        //afficher contenu note dans tableauNote
       
        Note a2=new Note();
        Note[] b2 = null;
       
        try {
           b2=a2.listeNotes();
        } catch (IOException ex) {
            Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
        }
         System.out.println(b2);
        DefaultTableModel model=(DefaultTableModel)tableauNote.getModel();
        model.setRowCount(0);
        i=0;
        while(i<b2.length){
            model.insertRow(model.getRowCount(),new Object[]{b2[i].getNumEt(),b2[i].getCodeMat(),b2[i].getNote(),b2[i].getConteur()});
            i++;
        }
        conteurEdit.setText("");
        numEtNote.setSelectedIndex(0);
        codematNote.setSelectedIndex(0);
        noteText.setText("");
        
    }
    public void affichageClassement(String niveau) throws IOException{
        String url="http://127.0.0.1:8081/api/classement/"+niveau;
        HttpClient  client=new DefaultHttpClient();
        HttpGet request=new HttpGet(url);
        HttpResponse response=client.execute(request);
        //BufferedReader rd=new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
        
        ObjectMapper a=new ObjectMapper();
        Classement[] classements=a.readValue(response.getEntity().getContent(), Classement[].class);
         DefaultTableModel model=(DefaultTableModel)tableauClassement.getModel();
        model.setRowCount(0);
        int i=0;
        while(i<classements.length){
            model.insertRow(model.getRowCount(),new Object[]{classements[i].getnumEt(),classements[i].getNom(),classements[i].getMoyenne()});
            i++;
        }
    }
    private void etudiantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_etudiantMouseClicked
        // TODO add your handling code here:
        Color a;
        a = new Color(86,70,119);
        etudiant.setBackground(a);
        acceuil.setBackground(new Color(108,127,144));
        matiere.setBackground(new Color(108,127,144));
        note.setBackground(new Color(108,127,144));
        apropos.setBackground(new Color(108,127,144));
        aide.setBackground(new Color(108,127,144));        
        classement.setBackground(new Color(108,127,144));
        collerPage(conteneurEtudiant);
        this.affichageEtudiant();
        
    }//GEN-LAST:event_etudiantMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void matiereMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_matiereMouseClicked
        // TODO add your handling code here:
        Color a;
        a = new Color(86,70,119);
        matiere.setBackground(a);
        acceuil.setBackground(new Color(108,127,144));
        etudiant.setBackground(new Color(108,127,144));
        note.setBackground(new Color(108,127,144));
        classement.setBackground(new Color(108,127,144));
        apropos.setBackground(new Color(108,127,144));
        aide.setBackground(new Color(108,127,144));
        collerPage(conteneurMatiere);
        this.affichageMatiere();
    }//GEN-LAST:event_matiereMouseClicked

    private void noteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_noteMouseClicked
        // TODO add your handling code here:
        Color a;
        a = new Color(86,70,119);
        note.setBackground(a);
        acceuil.setBackground(new Color(108,127,144));
        matiere.setBackground(new Color(108,127,144));
        classement.setBackground(new Color(108,127,144));
        etudiant.setBackground(new Color(108,127,144));
        apropos.setBackground(new Color(108,127,144));
        aide.setBackground(new Color(108,127,144));
        collerPage(conteneurNote);
        this.affichageNote();
    }//GEN-LAST:event_noteMouseClicked

    private void aproposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aproposMouseClicked
        // TODO add your handling code here:
        Color a;
        a = new Color(86,70,119);
        apropos.setBackground(a);
        acceuil.setBackground(new Color(108,127,144));
        matiere.setBackground(new Color(108,127,144));
        classement.setBackground(new Color(108,127,144));
        etudiant.setBackground(new Color(108,127,144));
        note.setBackground(new Color(108,127,144));
        aide.setBackground(new Color(108,127,144));
        collerPage(conteneurApropos);
        //this.affichageEtudiant();
    }//GEN-LAST:event_aproposMouseClicked

    private void acceuilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceuilActionPerformed
        // TODO add your handling code here:
         classement.setBackground(new Color(108,127,144));
        acceuil.setBackground(new Color(108,127,144));
        matiere.setBackground(new Color(108,127,144));
        note.setBackground(new Color(108,127,144));
        etudiant.setBackground(new Color(108,127,144));
        apropos.setBackground(new Color(108,127,144));
        aide.setBackground(new Color(108,127,144));
        collerPage(conteneurHome);
    }//GEN-LAST:event_acceuilActionPerformed

    private void aideMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aideMouseClicked
        // TODO add your handling code here:
        Color a;
        a = new Color(86,70,119);
        aide.setBackground(a);
        acceuil.setBackground(new Color(108,127,144));
        matiere.setBackground(new Color(108,127,144));
        classement.setBackground(new Color(108,127,144));
        etudiant.setBackground(new Color(108,127,144));
        apropos.setBackground(new Color(108,127,144));
        note.setBackground(new Color(108,127,144));
        collerPage(conteneurAide);
        //this.affichageEtudiant();
    }//GEN-LAST:event_aideMouseClicked

    private void classementMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classementMouseClicked
        // TODO add your handling code here:
        Color a;
        a = new Color(86,70,119);
        classement.setBackground(a);
        acceuil.setBackground(new Color(108,127,144));
        matiere.setBackground(new Color(108,127,144));
        note.setBackground(new Color(108,127,144));
        etudiant.setBackground(new Color(108,127,144));
        apropos.setBackground(new Color(108,127,144));
        aide.setBackground(new Color(108,127,144));
        collerPage(conteneurClassement);
       
    }//GEN-LAST:event_classementMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        collerPage(conteneurHome);
    }//GEN-LAST:event_formWindowOpened

    private void rechercheEtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheEtButtonActionPerformed
        // TODO add your handling code here:
        if(rechercheEtText.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Le numero ou le nom de l'etudiant n'est pas identifi√©!!","Message d'erreur",JOptionPane.ERROR_MESSAGE);
        }else{
            String url="http://127.0.0.1:8081/api/etudiants/search/"+rechercheEtText.getText().toString();
            HttpClient  client=new DefaultHttpClient();
            HttpGet request=new HttpGet(url);
            HttpResponse response;
            try {
                response = client.execute(request);
                ObjectMapper a=new ObjectMapper();
                Etudiant[] etudiants=a.readValue(response.getEntity().getContent(), Etudiant[].class);
                DefaultTableModel model=(DefaultTableModel)tableauEtudiant.getModel();
                model.setRowCount(0);
                int i=0;
                while(i<etudiants.length){
                    model.insertRow(model.getRowCount(),new Object[]{etudiants[i].getnum(),etudiants[i].getnom(),etudiants[i].getniveau()});
                    i++;
                }
            } catch (IOException ex) {
                Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
            }

            
            
        }
    }//GEN-LAST:event_rechercheEtButtonActionPerformed

    private void bulletinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bulletinButtonActionPerformed
        // TODO add your handling code here:
        if(!numEtEdit.getText().isEmpty()){
            
            //afficher dans tableau 
            String numEt=numEtEdit.getText();
            String url="http://127.0.0.1:8081/api/bulletin/"+numEt;
            HttpClient  client=new DefaultHttpClient();
            HttpGet request=new HttpGet(url);
            HttpResponse response = null;
            try {
                response = client.execute(request);
            } catch (IOException ex) {
                Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
            }
            ObjectMapper a=new ObjectMapper();
            try {
                Notage[] notages=a.readValue(response.getEntity().getContent(), Notage[].class);
                DefaultTableModel model=(DefaultTableModel)tableauBulletin.getModel();
                model.setRowCount(0);
                int i=0;
                while(i<notages.length){
                model.insertRow(model.getRowCount(),new Object[]{notages[i].getLibelle(),notages[i].getCoef(),notages[i].getNote(),notages[i].getPonderee()});
                i++;
            }
            } catch (IOException ex) {
                Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedOperationException ex) {
                Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
            }
            //***********************Fin affichege********************
            
            //afficher etudiant 

           String url1="http://127.0.0.1:8081/api/etudiants/"+numEt;
           HttpClient  client1=new DefaultHttpClient();
           HttpGet request1=new HttpGet(url1);
            try {
                HttpResponse response1=client1.execute(request1);
                //BufferedReader rd=new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
                ObjectMapper a1=new ObjectMapper();
                Etudiant[] b1;
                b1 = a1.readValue(response1.getEntity().getContent(), Etudiant[].class);
                numEtBulletin.setText("");
                nomBulletin.setText("");
                niveauBulletin.setText("");
                numEtBulletin.setText(b1[0].getnum());
                nomBulletin.setText(b1[0].getnom());
                niveauBulletin.setText(b1[0].getniveau());
            } catch (IOException ex) {
                Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedOperationException ex) {
                Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
            }
           
           //---------------------------------------------------------
           
           //Afficher observation et moyenne
            String url2="http://127.0.0.1:8081/api/observation/"+numEt;
            HttpClient  client2=new DefaultHttpClient();
            HttpGet request2=new HttpGet(url2);
            HttpResponse response2 = null;
            try {
                response2 = client2.execute(request2);
            } catch (IOException ex) {
                Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
            }
            ObjectMapper a2=new ObjectMapper();
            try {
                Observation[] Observation=a2.readValue(response2.getEntity().getContent(), Observation[].class);
                moyenneBulletin.setText(Observation[0].getMoyenne());
                observationBulletin.setText(Observation[0].getobservation().toString());
            } catch (IOException ex) {
                Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedOperationException ex) {
                Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
            } 
            this.collerPage(conteneurBulletin);
        }else{
            JOptionPane.showMessageDialog(this, "Veuillez selectionner un etudiant!!","Avertissement",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_bulletinButtonActionPerformed

    private void niveauComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_niveauComboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_niveauComboboxActionPerformed

    private void ajouterEtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterEtButtonActionPerformed
        // TODO add your handling code here:
       
        
        
        String numero=numEtText.getText();
        String nom=nomText.getText();
        String niveau=niveauCombobox.getSelectedItem().toString();
        
        Boolean reg=Pattern.matches("^(E)[0-9]{3,3}$",numero);
        
        if(reg){
            if(!numEtText.getText().isEmpty()){
               if(!nomText.getText().isEmpty()){
                   HttpClient client=new DefaultHttpClient();
                   HttpPost post=new HttpPost("http://127.0.0.1:8081/api/etudiants");
                   List<NameValuePair> urlParameters = new ArrayList<NameValuePair>();
                   urlParameters.add(new BasicNameValuePair("numEt", numero));
                   urlParameters.add(new BasicNameValuePair("nom", nom));
                   urlParameters.add(new BasicNameValuePair("niveau", niveau));
                   try {
                       post.setEntity(new UrlEncodedFormEntity(urlParameters));
                       HttpResponse reponse = client.execute(post);
                       principale a=new principale();
                        if (reponse.getStatusLine().getStatusCode() != 200) { 
                           throw new RuntimeException("Failed : HTTP error code : ¬´"+ reponse.getStatusLine().getStatusCode());
                       }
                       BufferedReader br = new BufferedReader(new InputStreamReader((reponse.getEntity().getContent())));
                       JOptionPane.showMessageDialog(a,br.readLine(),"Succ√®s",JOptionPane.INFORMATION_MESSAGE);


                   } catch (UnsupportedEncodingException ex) {
                       Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
                   } catch (IOException ex) {
                       Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
                   }
               }else{
                     principale b=new principale();
                     JOptionPane.showMessageDialog(b, "Le nom entr√© est vide","Avertissement",JOptionPane.WARNING_MESSAGE);
               }
           }else{
               principale b=new principale();
               JOptionPane.showMessageDialog(b, "Le numero entr√© est vide","Avertissement",JOptionPane.WARNING_MESSAGE);
           } 
        }else{
            JOptionPane.showMessageDialog(this, "Le numero de l'etudiant est de format EXXX o√π X est nombre entier","Avertissement",JOptionPane.ERROR_MESSAGE);
        }
                   
       
        this.affichageEtudiant();
        numEtText.setText("");
        nomText.setText("");
        numEtEdit.setText("");
        niveauCombobox.setSelectedIndex(0);
    }//GEN-LAST:event_ajouterEtButtonActionPerformed

    private void nomTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomTextActionPerformed

    private void tableauEtudiantMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableauEtudiantMouseClicked
        // TODO add your handling code here:
        int m;
        m = tableauEtudiant.getSelectedRow();
        DefaultTableModel model=(DefaultTableModel)tableauEtudiant.getModel();

        String a=model.getValueAt(m, 0).toString();
        String b=model.getValueAt(m, 1).toString();
        String c=model.getValueAt(m, 2).toString();

        numEtEdit.setText(a);
        numEtText.setText(a);
        nomText.setText(b);
        niveauCombobox.setSelectedItem(c);
    }//GEN-LAST:event_tableauEtudiantMouseClicked

    private void supprimerEtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerEtButtonActionPerformed
        // TODO add your handling code here:
        if(numEtEdit.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez selectionner un etudiant!!","Avertissement",JOptionPane.WARNING_MESSAGE);

        }else{
            int reponse=JOptionPane.showConfirmDialog(this,"Voulez vous supprimer ce Location?","Question",JOptionPane.YES_NO_OPTION);
            if(reponse==JOptionPane.YES_OPTION){
                //supprimer etudiant
                HttpClient client=new DefaultHttpClient();
                HttpDelete deleteRequest=new HttpDelete("http://127.0.0.1:8081/api/etudiants/"+numEtEdit.getText());
               
                try {
                    HttpResponse response=client.execute(deleteRequest);
                    if (response.getStatusLine().getStatusCode() != 200) { 
                        throw new RuntimeException("Failed : HTTP error code : ¬´"+ response.getStatusLine().getStatusCode());
                    }
                    BufferedReader br = new BufferedReader(new InputStreamReader((response.getEntity().getContent())));
                    JOptionPane.showMessageDialog(this,br.readLine(),"Succ√®s",JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException ex) {
                    Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        this.affichageEtudiant();
        numEtText.setText("");
        numEtEdit.setText("");
        nomText.setText("");
        niveauCombobox.setSelectedIndex(0);
    }//GEN-LAST:event_supprimerEtButtonActionPerformed

    private void modifierEtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierEtButtonActionPerformed
        // TODO add your handling code here:
         Boolean reg=Pattern.matches("^(E)[0-9]{3,3}$",numEtText.getText());
        
         if(numEtEdit.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez selectionner un etudiant!!","Avertissement",JOptionPane.WARNING_MESSAGE);
        }else{
            if(reg){
                HttpClient client=new DefaultHttpClient();
                HttpPut putRequest=new HttpPut("http://127.0.0.1:8081/api/etudiants/"+numEtEdit.getText().toString());
                List<NameValuePair> urlParameters = new ArrayList<NameValuePair>();
                urlParameters.add(new BasicNameValuePair("numEt", numEtText.getText()));
                urlParameters.add(new BasicNameValuePair("nom", nomText.getText()));
                urlParameters.add(new BasicNameValuePair("niveau", niveauCombobox.getSelectedItem().toString()));
             try {
                 putRequest.setEntity(new UrlEncodedFormEntity(urlParameters));
                  //HttpResponse reponse = client.execute(post);
                 HttpResponse reponse=client.execute(putRequest);
                 if (reponse.getStatusLine().getStatusCode() != 200) { 
                        throw new RuntimeException("Failed : HTTP error code : ¬´"+ reponse.getStatusLine().getStatusCode());
                    }
                BufferedReader br = new BufferedReader(new InputStreamReader((reponse.getEntity().getContent())));
                JOptionPane.showMessageDialog(this,br.readLine(),"Succ√®s",JOptionPane.INFORMATION_MESSAGE);
             } catch (IOException ex) {
                 Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
             }
            }else{
                JOptionPane.showMessageDialog(this, "Le numero de l'etudiant est de format EXXX o√π X est nombre entier","Avertissement",JOptionPane.ERROR_MESSAGE);
            }
             
         }
         this.affichageEtudiant();
         numEtText.setText("");
        nomText.setText("");
        niveauCombobox.setSelectedIndex(0);
    }//GEN-LAST:event_modifierEtButtonActionPerformed

    private void rafraichirEtudiantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rafraichirEtudiantActionPerformed
        // TODO add your handling code here:
        this.affichageEtudiant();
          numEtText.setText("");
        nomText.setText("");
        numEtEdit.setText("");
        niveauCombobox.setSelectedIndex(0);
    }//GEN-LAST:event_rafraichirEtudiantActionPerformed

    private void libelleTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libelleTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_libelleTextActionPerformed

    private void ajouterMatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterMatButtonActionPerformed
        // TODO add your handling code here:
        String codemat=codematText.getText();
        String libelle=libelleText.getText();
        String coefficient=coefText.getText();
        
        Boolean reg=Pattern.matches("^(M)[0-9]{2,2}$",codemat);
        
        if(reg){
            if(!codematText.getText().isEmpty()){
                if(!libelleText.getText().isEmpty()){
                    if(!coefText.getText().isEmpty()){
                        HttpClient client=new DefaultHttpClient();
                        HttpPost post=new HttpPost("http://127.0.0.1:8081/api/matieres");
                        List<NameValuePair> urlParameters = new ArrayList<NameValuePair>();
                        urlParameters.add(new BasicNameValuePair("codemat", codemat));
                        urlParameters.add(new BasicNameValuePair("libelle", libelle));
                        urlParameters.add(new BasicNameValuePair("coefficient", coefficient));
                        try {
                            post.setEntity(new UrlEncodedFormEntity(urlParameters));
                            HttpResponse reponse = client.execute(post);

                             if (reponse.getStatusLine().getStatusCode() != 200) { 
                                throw new RuntimeException("Failed : HTTP error code : ¬´"+ reponse.getStatusLine().getStatusCode());
                            }
                            BufferedReader br = new BufferedReader(new InputStreamReader((reponse.getEntity().getContent())));
                            JOptionPane.showMessageDialog(this,br.readLine(),"Succ√®s",JOptionPane.INFORMATION_MESSAGE);


                        } catch (UnsupportedEncodingException ex) {
                            Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else{
                        JOptionPane.showMessageDialog(this, "Le coefficient entr√© est vide","Avertissement",JOptionPane.WARNING_MESSAGE);
                    }
                }else{
                      JOptionPane.showMessageDialog(this, "Le libelle entr√© est vide","Avertissement",JOptionPane.WARNING_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(this, "Le code matiere entr√© est vide","Avertissement",JOptionPane.WARNING_MESSAGE);
            }             
        }else{
            JOptionPane.showMessageDialog(this, "Le numero de matiere est de format MXX o√π X est nombre entier","Avertissement",JOptionPane.ERROR_MESSAGE);
        }
        this.affichageMatiere();
      
    }//GEN-LAST:event_ajouterMatButtonActionPerformed

    private void modifierMatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierMatButtonActionPerformed
        // TODO add your handling code here:
        Boolean reg=Pattern.matches("^(M)[0-9]{2,2}$",codematText.getText());

        // TODO add your handling code here:
         if(codematEdit.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez selectionner un matiere!!","Avertissement",JOptionPane.WARNING_MESSAGE);
        }else{
             if(reg){
                    HttpClient client=new DefaultHttpClient();
                     HttpPut putRequest=new HttpPut("http://127.0.0.1:8081/api/matieres/"+codematEdit.getText().toString());
                     List<NameValuePair> urlParameters = new ArrayList<NameValuePair>();
                     urlParameters.add(new BasicNameValuePair("codemat", codematText.getText()));
                     urlParameters.add(new BasicNameValuePair("libelle", libelleText.getText()));
                     urlParameters.add(new BasicNameValuePair("coef", coefText.getText()));
                  try {
                      putRequest.setEntity(new UrlEncodedFormEntity(urlParameters));
                       //HttpResponse reponse = client.execute(post);
                      HttpResponse reponse=client.execute(putRequest);
                      if (reponse.getStatusLine().getStatusCode() != 200) { 
                             throw new RuntimeException("Failed : HTTP error code : ¬´"+ reponse.getStatusLine().getStatusCode());
                         }
                     BufferedReader br = new BufferedReader(new InputStreamReader((reponse.getEntity().getContent())));
                     JOptionPane.showMessageDialog(this,br.readLine(),"Succ√®s",JOptionPane.INFORMATION_MESSAGE);
                  } catch (IOException ex) {
                      Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
                  }
             }else{
                    JOptionPane.showMessageDialog(this, "Le code de matiere est de format MXX o√π X est nombre entier","Avertissement",JOptionPane.ERROR_MESSAGE);
             }
         }
         this.affichageMatiere();
    }//GEN-LAST:event_modifierMatButtonActionPerformed

    private void supprimerMatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerMatButtonActionPerformed
        // TODO add your handling code here:
        if(codematEdit.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez selectionner un matiere!!","Avertissement",JOptionPane.WARNING_MESSAGE);

        }else{
            int reponse=JOptionPane.showConfirmDialog(this,"Voulez vous supprimer ce matiere?","Question",JOptionPane.YES_NO_OPTION);
            if(reponse==JOptionPane.YES_OPTION){
                //supprimer etudiant
                HttpClient client=new DefaultHttpClient();
                HttpDelete deleteRequest=new HttpDelete("http://127.0.0.1:8081/api/matieres/"+codematEdit.getText());
               System.out.println(codematEdit.getText());
                try {
                    HttpResponse response=client.execute(deleteRequest);
                    if (response.getStatusLine().getStatusCode() != 200) { 
                        throw new RuntimeException("Failed : HTTP error code : ¬´"+ response.getStatusLine().getStatusCode());
                    }
                    BufferedReader br = new BufferedReader(new InputStreamReader((response.getEntity().getContent())));
                    JOptionPane.showMessageDialog(this,br.readLine(),"Succ√®s",JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException ex) {
                    Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        this.affichageMatiere();
        numEtText.setText("");
        numEtEdit.setText("");
        nomText.setText("");
        niveauCombobox.setSelectedIndex(0);
    }//GEN-LAST:event_supprimerMatButtonActionPerformed

    private void rafraichirMatiereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rafraichirMatiereActionPerformed
        // TODO add your handling code here:
        this.affichageMatiere();
        codematText.setText("");
        codematEdit.setText("");
        libelleText.setText("");
        coefText.setText("");
    }//GEN-LAST:event_rafraichirMatiereActionPerformed

    private void tableauMatiereMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableauMatiereMouseClicked
        // TODO add your handling code here:
         int m;
        m = tableauMatiere.getSelectedRow();
        DefaultTableModel model=(DefaultTableModel)tableauMatiere.getModel();

        String a=model.getValueAt(m, 0).toString();
        String b=model.getValueAt(m, 1).toString();
        String c=model.getValueAt(m, 2).toString();

        codematText.setText(a);
        codematEdit.setText(a);
        libelleText.setText(b);
        coefText.setText(c);
    }//GEN-LAST:event_tableauMatiereMouseClicked

    private void tableauNoteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableauNoteMouseClicked
        // TODO add your handling code here:
         int m;
        m = tableauNote.getSelectedRow();
        DefaultTableModel model=(DefaultTableModel)tableauNote.getModel();

        String a=model.getValueAt(m, 0).toString();
        String b=model.getValueAt(m, 1).toString();
        String c=model.getValueAt(m, 2).toString();
        String d=model.getValueAt(m, 3).toString();
        conteurEdit.setText(d);
        numEtNote.setSelectedItem(a);
        codematNote.setSelectedItem(b);
        noteText.setText(c);
    }//GEN-LAST:event_tableauNoteMouseClicked

    private void ajouterNoteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterNoteButtonActionPerformed
        // TODO add your handling code here:
        String codemat=codematNote.getItemAt(codematNote.getSelectedIndex());
        String numEt=numEtNote.getItemAt(numEtNote.getSelectedIndex());
        String note=noteText.getText();
        //System.out.println(codematNote.getSelectedIndex());
        if(numEtNote.getSelectedIndex()!=-1){
            if(codematNote.getSelectedIndex()!=-1){
                if(!noteText.getText().isEmpty()){
                    HttpClient client=new DefaultHttpClient();
                    HttpPost post=new HttpPost("http://127.0.0.1:8081/api/notes");
                    List<NameValuePair> urlParameters = new ArrayList<NameValuePair>();
                    urlParameters.add(new BasicNameValuePair("numEt", numEt));
                    urlParameters.add(new BasicNameValuePair("codemat", codemat));
                    urlParameters.add(new BasicNameValuePair("note", note));
                    try {
                        post.setEntity(new UrlEncodedFormEntity(urlParameters));
                        HttpResponse reponse = client.execute(post);

                         if (reponse.getStatusLine().getStatusCode() != 200) { 
                            throw new RuntimeException("Failed : HTTP error code : ¬´"+ reponse.getStatusLine().getStatusCode());
                        }
                        BufferedReader br = new BufferedReader(new InputStreamReader((reponse.getEntity().getContent())));
                        JOptionPane.showMessageDialog(this,br.readLine(),"Succ√®s",JOptionPane.INFORMATION_MESSAGE);


                    } catch (UnsupportedEncodingException ex) {
                        Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }else{
                    JOptionPane.showMessageDialog(this, "Le note entr√© est vide","Avertissement",JOptionPane.WARNING_MESSAGE);
                }
            }else{
                  JOptionPane.showMessageDialog(this, "Il n'y a pas encore de Matiere","Avertissement",JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Il n'y a pas encore d'Etudiant","Avertissement",JOptionPane.WARNING_MESSAGE);
        }             
       
        this.affichageNote();
        
    }//GEN-LAST:event_ajouterNoteButtonActionPerformed

    private void modifierNoteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierNoteButtonActionPerformed
        // TODO add your handling code here:
        if(conteurEdit.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez selectionner un note!!","Avertissement",JOptionPane.WARNING_MESSAGE);
        }else{
               HttpClient client=new DefaultHttpClient();
                HttpPut putRequest=new HttpPut("http://127.0.0.1:8081/api/notes/"+conteurEdit.getText().toString());
                List<NameValuePair> urlParameters = new ArrayList<NameValuePair>();
                urlParameters.add(new BasicNameValuePair("numEt", numEtNote.getSelectedItem().toString()));
                urlParameters.add(new BasicNameValuePair("codemat", codematNote.getSelectedItem().toString()));
                urlParameters.add(new BasicNameValuePair("note", noteText.getText()));
             try {
                 putRequest.setEntity(new UrlEncodedFormEntity(urlParameters));
                  //HttpResponse reponse = client.execute(post);
                 HttpResponse reponse=client.execute(putRequest);
                 if (reponse.getStatusLine().getStatusCode() != 200) { 
                        throw new RuntimeException("Failed : HTTP error code : ¬´"+ reponse.getStatusLine().getStatusCode());
                    }
                BufferedReader br = new BufferedReader(new InputStreamReader((reponse.getEntity().getContent())));
                JOptionPane.showMessageDialog(this,br.readLine(),"Succ√®s",JOptionPane.INFORMATION_MESSAGE);
             } catch (IOException ex) {
                 Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
             }
         }
         this.affichageNote();
    }//GEN-LAST:event_modifierNoteButtonActionPerformed

    private void supprimerNoteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerNoteButtonActionPerformed
        // TODO add your handling code here:
        if(conteurEdit.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Veuillez selectionner un note!!","Avertissement",JOptionPane.WARNING_MESSAGE);

        }else{
            int reponse=JOptionPane.showConfirmDialog(this,"Voulez vous supprimer ce note?","Question",JOptionPane.YES_NO_OPTION);
            if(reponse==JOptionPane.YES_OPTION){
                //supprimer etudiant
                HttpClient client=new DefaultHttpClient();
                HttpDelete deleteRequest=new HttpDelete("http://127.0.0.1:8081/api/notes/"+conteurEdit.getText());
                try {
                    HttpResponse response=client.execute(deleteRequest);
                    if (response.getStatusLine().getStatusCode() != 200) { 
                        throw new RuntimeException("Failed : HTTP error code : ¬´"+ response.getStatusLine().getStatusCode());
                    }
                    BufferedReader br = new BufferedReader(new InputStreamReader((response.getEntity().getContent())));
                    JOptionPane.showMessageDialog(this,br.readLine(),"Succ√®s",JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException ex) {
                    Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        this.affichageNote();
    }//GEN-LAST:event_supprimerNoteButtonActionPerformed

    private void rafraichirNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rafraichirNoteActionPerformed
        // TODO add your handling code here:
        this.affichageNote();
        
    }//GEN-LAST:event_rafraichirNoteActionPerformed

    private void rafraichirClassementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rafraichirClassementActionPerformed
        try {
            String niveau=niveauClassement.getSelectedItem().toString();
            this.affichageClassement(niveau);
        } catch (IOException ex) {
            Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rafraichirClassementActionPerformed

    private void genPDFClassementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genPDFClassementActionPerformed
        // TODO add your handling code here:
         if(tableauClassement.getRowCount()>0){
            Document document = new Document();
            //SimpleDateFormat dateFormat=new SimpleDateFormat(" hh-mm-ss ");
            //String date=dateFormat.format(new Date());
            String date=new Date().toString().replace(":", "-");
            System.out.println(date);
            String filename="D:/pdf/classementEtudiant "+date+".pdf";
            String niveau=niveauClassement.getSelectedItem().toString();
             try {
                 PdfWriter.getInstance(document, new FileOutputStream(filename));
             } catch (FileNotFoundException ex) {
                 Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
             } catch (DocumentException ex) {
                 Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
             }
            
            document.open();
            
            Paragraph p,p1= null,p5;
            p=new Paragraph("ATE Corporation\n\n");
            p.setAlignment(Element.ALIGN_CENTER);
            p1=new Paragraph("CLASSEMENT DES ETUDIANTS PAR ORDRE DE MERITE\n");
            p1.setAlignment(Element.ALIGN_CENTER);
            p5=new Paragraph("Niveau : "+niveau+"\n\n");
            p5.setAlignment(Element.ALIGN_CENTER);
            
            //ajout de table
            PdfPTable table = new PdfPTable(3);
            
            PdfPCell c1 = new PdfPCell(new Phrase("No ETUDIANT"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            
            c1 = new PdfPCell(new Phrase("NOM"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);

            c1 = new PdfPCell(new Phrase("MOYENNE"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            
            table.setHeaderRows(1);
            
            //prendre les donne du web service
            String url="http://127.0.0.1:8081/api/classement/"+niveau;
            HttpClient  client=new DefaultHttpClient();
            HttpGet request=new HttpGet(url);
            HttpResponse response;
            Classement[] classements;
            ObjectMapper a=new ObjectMapper();
            try {
                response = client.execute(request);
                classements=a.readValue(response.getEntity().getContent(), Classement[].class);
                DefaultTableModel model=(DefaultTableModel)tableauClassement.getModel();
                model.setRowCount(0);
                int i=0;
                while(i<classements.length){
                    table.addCell(classements[i].getnumEt());
                    table.addCell(classements[i].getNom());
                    table.addCell(String.valueOf(classements[i].getMoyenne()));
                    i++;
                }
                
                
             } catch (IOException ex) {
                 Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
             }
                        System.out.println(date);

             try {
                document.add(p);
                document.add(p1);
                document.add(p5);
                document.add(table);
             } catch (DocumentException ex) {
                 Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
             }
            document.close();
            JOptionPane.showMessageDialog(this,"Le pdf est generee sur le disque D:/pdf/","Message de Succes",JOptionPane.DEFAULT_OPTION);
               
          
         }else{
            JOptionPane.showMessageDialog(this,"Le tableau est vide","Message d'erreur",JOptionPane.ERROR_MESSAGE);

         }
        try {
            String niveau=niveauClassement.getSelectedItem().toString();
            this.affichageClassement(niveau);
        } catch (IOException ex) {
            Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_genPDFClassementActionPerformed

    private void genPDFBulletinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genPDFBulletinActionPerformed
        // TODO add your handling code here:
            Document document = new Document();
            //SimpleDateFormat dateFormat=new SimpleDateFormat(" hh-mm-ss ");
            //String date=dateFormat.format(new Date());
            String date=new Date().toString().replace(":", "-");
            System.out.println(date);
            String numEt=numEtBulletin.getText();
            String nom=nomBulletin.getText();
            String niveau=niveauBulletin.getText();
            String moyenne=moyenneBulletin.getText();
            String observation=observationBulletin.getText();
            String filename="D:/pdf/Bulletin d'Etudiant "+numEt+" "+date+".pdf";
            
             try {
                 PdfWriter.getInstance(document, new FileOutputStream(filename));
             } catch (FileNotFoundException ex) {
                 Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
             } catch (DocumentException ex) {
                 Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
             }
            
            document.open();
            
            Paragraph p,p1,p2,p3,p4= null;
            p=new Paragraph("ATE Corporation\n\n");
            p.setAlignment(Element.ALIGN_CENTER);
            p1=new Paragraph("BULLETIN DES NOTES\n\n");
            p1.setAlignment(Element.ALIGN_CENTER);
            p2=new Paragraph("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNo Etudiant :\t");
            p2.add(numEt+"\n");
            p2.setAlignment(Element.ALIGN_LEFT);
            p3=new Paragraph("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tNom :\t");
            p3.add(nom+"\t\t\t\t\t\t");            
            p3.add("Niveau :\t"+niveau+"\n\n");
            p3.setAlignment(Element.ALIGN_LEFT);
            p4=new Paragraph("MOYENNE :\t");
            p4.add(moyenne+"\n");            
            p4.add("Obseration :\t"+observation+"\n\n");
            p4.setAlignment(Element.ALIGN_RIGHT);
            p4.setIndentationRight(60);
            //ajout de table
            PdfPTable table = new PdfPTable(4);
            
            PdfPCell c1 = new PdfPCell(new Phrase("DESIGNATION"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            
            c1 = new PdfPCell(new Phrase("COEF"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);

            c1 = new PdfPCell(new Phrase("NOTE"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            
            c1 = new PdfPCell(new Phrase("NOTE PONDEREE"));
            c1.setHorizontalAlignment(Element.ALIGN_CENTER);
            table.addCell(c1);
            
            table.setHeaderRows(1);
            
            //prendre les donne du web service
              String url="http://127.0.0.1:8081/api/bulletin/"+numEt;
              HttpClient  client=new DefaultHttpClient();
              HttpGet request=new HttpGet(url);
              HttpResponse response = null;
              try {
                  response = client.execute(request);
              } catch (IOException ex) {
                  Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
              }
              ObjectMapper a=new ObjectMapper();
              try {
                  Notage[] notages=a.readValue(response.getEntity().getContent(), Notage[].class);
                  DefaultTableModel model=(DefaultTableModel)tableauBulletin.getModel();
                  model.setRowCount(0);
                  int i=0;
                  while(i<notages.length){
                    table.addCell(notages[i].getLibelle());
                    table.addCell(String.valueOf(notages[i].getCoef()));
                    table.addCell(String.valueOf(notages[i].getNote()));
                    table.addCell(String.valueOf(notages[i].getPonderee()));
                    i++;
                      
                  }
              } catch (IOException ex) {
                  Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
              } catch (UnsupportedOperationException ex) {
                  Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
              }
               

             try {
                document.add(p);
                document.add(p1);                
                document.add(p2);
                document.add(p3);
                document.add(table);                
                document.add(p4);

             } catch (DocumentException ex) {
                 Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
             }
            document.close();
            JOptionPane.showMessageDialog(this,"Le pdf est generee sur le disque D:/pdf/","Message de Succes",JOptionPane.DEFAULT_OPTION);
              
    }//GEN-LAST:event_genPDFBulletinActionPerformed

    private void noteTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noteTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noteTextActionPerformed

    private void voirClassementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voirClassementActionPerformed
        // TODO add your handling code here:
         try {
            String niveau=niveauClassement.getSelectedItem().toString();
            this.affichageClassement(niveau);
        } catch (IOException ex) {
            Logger.getLogger(principale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_voirClassementActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

       try{
           UIManager.setLookAndFeel("com.jtattoo.plaf.texture.TextureLookAndFeel");
       }catch(Exception e){
           e.printStackTrace();
       }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceuil;
    private javax.swing.JPanel aide;
    private javax.swing.JButton ajouterEtButton;
    private javax.swing.JButton ajouterMatButton;
    private javax.swing.JButton ajouterNoteButton;
    private javax.swing.JPanel apropos;
    private javax.swing.JButton bulletinButton;
    private javax.swing.JPanel classement;
    private javax.swing.JTextField codematEdit;
    private javax.swing.JComboBox<String> codematNote;
    private javax.swing.JTextField codematText;
    private javax.swing.JTextField coefText;
    private javax.swing.JPanel conteneurAide;
    private javax.swing.JPanel conteneurApropos;
    private javax.swing.JPanel conteneurBulletin;
    private javax.swing.JPanel conteneurClassement;
    private javax.swing.JPanel conteneurEtudiant;
    private javax.swing.JPanel conteneurHome;
    private javax.swing.JPanel conteneurMatiere;
    private javax.swing.JPanel conteneurNote;
    private javax.swing.JPanel conteneurPrincipale;
    private javax.swing.JTextField conteurEdit;
    private javax.swing.JPanel etudiant;
    private javax.swing.JButton genPDFBulletin;
    private javax.swing.JButton genPDFClassement;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField libelleText;
    private javax.swing.JPanel matiere;
    private javax.swing.JButton modifierEtButton;
    private javax.swing.JButton modifierMatButton;
    private javax.swing.JButton modifierNoteButton;
    private javax.swing.JTextField moyenneBulletin;
    private javax.swing.JTextField niveauBulletin;
    private javax.swing.JComboBox<String> niveauClassement;
    private javax.swing.JComboBox<String> niveauCombobox;
    private javax.swing.JTextField nomBulletin;
    private javax.swing.JTextField nomText;
    private javax.swing.JPanel note;
    private javax.swing.JTextField noteText;
    private javax.swing.JTextField numEtBulletin;
    private javax.swing.JTextField numEtEdit;
    private javax.swing.JComboBox<String> numEtNote;
    private javax.swing.JTextField numEtText;
    private javax.swing.JTextField observationBulletin;
    private javax.swing.JButton rafraichirClassement;
    private javax.swing.JButton rafraichirEtudiant;
    private javax.swing.JButton rafraichirMatiere;
    private javax.swing.JButton rafraichirNote;
    private javax.swing.JButton rechercheEtButton;
    private javax.swing.JTextField rechercheEtText;
    private javax.swing.JButton supprimerEtButton;
    private javax.swing.JButton supprimerMatButton;
    private javax.swing.JButton supprimerNoteButton;
    private javax.swing.JTable tableauBulletin;
    private javax.swing.JTable tableauClassement;
    private javax.swing.JTable tableauEtudiant;
    private javax.swing.JTable tableauMatiere;
    private javax.swing.JTable tableauNote;
    private javax.swing.JButton voirClassement;
    // End of variables declaration//GEN-END:variables
}
